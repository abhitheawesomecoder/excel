
# BEGIN WordPress
<IfModule mod_rewrite.c>
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
</IfModule>

# END WordPress
#RewriteCond %{HTTPS} off
#RewriteCond %{HTTP:X-Forwarded-SSL} !on
#RewriteCond %{HTTP_HOST} ^msjcontracts\.co\.uk$ [OR]
#RewriteCond %{HTTP_HOST} ^www\.msjcontracts\.co\.uk$
#RewriteRule ^/?$ "https\:\/\/msjcontracts\.co\.uk\/" [R=301,L]

RewriteCond %{HTTP_REFERER} !^http://msjcontracts.co.uk/.*$      [NC]
RewriteCond %{HTTP_REFERER} !^http://msjcontracts.co.uk$      [NC]
RewriteCond %{HTTP_REFERER} !^http://www.msjcontracts.co.uk/.*$      [NC]
RewriteCond %{HTTP_REFERER} !^http://www.msjcontracts.co.uk$      [NC]
RewriteCond %{HTTP_REFERER} !^https://msjcontracts.co.uk/.*$      [NC]
RewriteCond %{HTTP_REFERER} !^https://msjcontracts.co.uk$      [NC]
RewriteCond %{HTTP_REFERER} !^https://www.msjcontracts.co.uk/.*$      [NC]
RewriteCond %{HTTP_REFERER} !^https://www.msjcontracts.co.uk$      [NC]
RewriteRule .*\.(jpg|jpeg|gif|png|bmp)$ - [F,NC]




# php -- BEGIN cPanel-generated handler, do not edit
# Set the “ea-php71” package as the default “PHP” programming language.
<IfModule mime_module>
  AddHandler application/x-httpd-ea-php71 .php .php7 .phtml
</IfModule>
# php -- END cPanel-generated handler, do not edit

<div class="col-lg-6 col-md-6 col-sm-6 clear-left">
                                
                                <div class="form-group form-float"  >
        
    <div class="form-line">

            <label for="expected_close_date" class="form-label">Expected close date</label>
            <input class="form-control datepicker" name="expected_close_date" type="text" id="expected_close_date">
     
            
    </div>
        </div>

                            </div>

    <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="form-group"  >
    
    <div class="form-line">

    <label for="due_date" class="control-label required">Due date</label>
    <input class="form-control datepicker" required="required" name="due_date" type="text" id="due_date">
    
    

    </div>

        </div>
    
            </div>   


window.APPLICATION_USER_DATE_FORMAT YYYY-MM-DD dashboard:60:17
window.APPLICATION_USER_TIME_FORMAT HH:mm dashboard:62:17
window.APPLICATION_USER_LANGUAGE en dashboard:64:17
window.UID 1 dashboard:66:17
window.APPLICATION_USER_TIME_FORMAT_24 true

        <div>
          <button type="button" class="button save" data-action="save-png">Save as PNG</button>
          <button type="button" class="button save" data-action="save-jpg">Save as JPG</button>
          <button type="button" class="button save" data-action="save-svg">Save as SVG</button>
        </div>



          /*$contact = DB::table('contacts')
                   ->select('client_id',DB::raw('MIN(id) as id'),'email','phone_no')
                   ->groupBy('client_id');

          $newQuery = DB::table('clients')
            ->join('users', 'clients.assigned_to', '=', 'users.id')
            ->joinSub($contact, 'clients_contact', function ($join) {
                $join->on('clients.id', '=', 'clients_contact.client_id');
            })->select([
                'clients.id as id',
                'clients.account_number as account_number',
                'clients.client_name as client_name',
                'users.name as assigned_to',
                'clients_contact.email as email',
                'clients_contact.phone_no as phone_no',
            ])
           ->toSql();*
/*ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION*/

    /*$contact = DB::table('contacts')
                   ->select('client_id',DB::raw('MIN(id) as id','email','phone_no'))
                   ->groupBy('client_id');

        $newQuery = DB::table('clients')
        ->join('users', 'clients.assigned_to', '=', 'users.id')
        ->joinSub($contact, 'clients_contact', function ($join) {
            $join->on('clients.id', '=', 'clients_contact.client_id');
        })
        ->select([
                'clients.id as id',
                'clients.account_number as account_number',
                'clients.client_name as client_name',
                'users.name as assigned_to',
                'clients_contact.email as email',
                'clients_contact.phone_no as phone_no',
            ])
        ->get();*/


        /*$newQuery = DB::table('clients')->selectRaw(
                'clients.id as id, 
                clients.account_number as account_number,
                clients.client_name as client_name,
                users.name as assigned_to,
                contacts.email as email,
                contacts.phone_no as phone_no')
            ->rightjoin('users', 'clients.assigned_to', '=', 'users.id')
            ->rightjoin('contacts', 'contacts.client_id', '=', 'clients.id')
            ->toSQL();*/

            //return $newQuery;




            $storecontact = DB::table('storecontacts')
                   ->select('store_id',DB::raw('MIN(id) as id'),'name','title')
                   ->groupBy('store_id');

        //$storecontacts = DB::table('storecontacts')->where('name', 'John')->first();
        $query = $model->newQuery();
        $newQuery = $query->joinSub($storecontact, 'stores_contact', function ($join) {
                    $join->on('stores.id', '=', 'stores_contact.store_id')
                    })->where('stores.client_id',$this->client_id)
                    ->select([
                'stores.id as id',
                'stores.store_name as store_name',
                'stores.address1 as address1',
                'stores.city as city',
                'stores.postcode as postcode',
                'stores_contact.phone_no as phone_no',
                'stores_contact.email as email',
                'stores.store_id as store_id'
            ]);